server {
  listen       80;
  server_name  {{domain}};
  root          /data/www/{{domain}}/public;
  autoindex    off;
  index        index.html index.php;

  access_log   /data/log/openresty/{{domain}}.http.access.log;

  location / {
    return 301 https://$host$request_uri;
  }
}
server {
  listen      443  ssl;
  server_name {{domain}};
  root        /data/www/{{domain}}/public;
  autoindex   off;
  index       index.html index.php;

  ssl on;
  ssl_certificate /etc/letsencrypt/live/{{domain}}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{domain}}/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/{{domain}}/fullchain.pem;
  ssl_stapling on;
  ssl_stapling_verify on;
  ssl_session_timeout 5m;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers HIGH:!aNULL:!MD5:!EXPORT56:!EXP;
  ssl_session_cache shared:SSL:50m;
  ssl_dhparam ssl/dhparams.pem;
  ssl_prefer_server_ciphers on;

  client_max_body_size  20m;

  add_header X-Server-IP $SERVER_ADDR;
  add_header X-Request-Method 'normal';


  access_log  /data/log/openresty/{{domain}}.access.log main;
  error_log   /data/log/openresty/{{domain}}.error.log debug;

  location /basic_status {
    stub_status on;
    access_log off ;

  }


  location /status {
    access_log off ;
    fastcgi_pass   unix:///dev/shm/php-fpm.sock;
    fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param  SCRIPT_NAME      $fastcgi_script_name;
    include        fastcgi_params;

  }
  location ~* \.(png|jpg|jpeg|gif|css|js|html)$ {
    try_files $uri $uri/ =404;
  }

  # for let's encrypt authorized
  include "vhosts/_well-known-challenges.conf.fragment";

  # cors process
  add_header Access-Control-Allow-Origin *;
  add_header Access-Control-Allow-Methods GET,POST,OPTIONS;
  add_header Access-Control-Max-Age 1728000;

  # for h5 static file
  location /c {
    etag on;
  }

  location /c/page/works {
    etag on;
    try_files $uri $uri/ /index.php?$query_string;
  }

  # for h5 api, support cors
  location /c/api {
    # for preflight
    if ($request_method = 'OPTIONS') {
      return 204;
    }

    try_files $uri $uri/ /index.php?$query_string;
  }


   location ^~ /v1/ {
      more_set_headers    "Content-Type: application/json";
      echo '{ "code": 10020, "message": "Your app version is deprecated, please download latest version", "data": {} }';
   }

   location ^~ /v2/ {
      more_set_headers    "Content-Type: application/json";
      echo '{ "code": 10020, "message": "Your app version is deprecated, please download latest version", "data": {} }';
   }


  location / {
    try_files $uri $uri/ /index.php?$query_string;
  }

  location ~ \.php$ {
    fastcgi_pass   unix:///dev/shm/php-fpm.sock;
    fastcgi_index  index.php;
    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
    fastcgi_param  SCRIPT_NAME      $fastcgi_script_name;
    include        fastcgi_params;
  }
}
